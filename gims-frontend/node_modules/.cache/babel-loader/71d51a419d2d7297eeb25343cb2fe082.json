{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/chalanthornaenguthaivadt/Desktop/final_thesis/gims/gims-frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/chalanthornaenguthaivadt/Desktop/final_thesis/gims/gims-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/chalanthornaenguthaivadt/Desktop/final_thesis/gims/gims-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { DecodeStream } from './DecodeStream.js';\nvar textEncoder = new TextEncoder();\nvar isBigEndian = new Uint8Array(new Uint16Array([0x1234]).buffer)[0] == 0x12;\nexport var EncodeStream = /*#__PURE__*/function () {\n  function EncodeStream(buffer) {\n    _classCallCheck(this, EncodeStream);\n    this.buffer = buffer;\n    this.view = new DataView(this.buffer.buffer, this.buffer.byteOffset, this.buffer.byteLength);\n    this.pos = 0;\n  }\n  _createClass(EncodeStream, [{\n    key: \"writeBuffer\",\n    value: function writeBuffer(buffer) {\n      this.buffer.set(buffer, this.pos);\n      this.pos += buffer.length;\n    }\n  }, {\n    key: \"writeString\",\n    value: function writeString(string) {\n      var encoding = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'ascii';\n      var buf;\n      switch (encoding) {\n        case 'utf16le':\n        case 'utf16-le':\n        case 'ucs2':\n          // node treats this the same as utf16.\n          buf = stringToUtf16(string, isBigEndian);\n          break;\n        case 'utf16be':\n        case 'utf16-be':\n          buf = stringToUtf16(string, !isBigEndian);\n          break;\n        case 'utf8':\n          buf = textEncoder.encode(string);\n          break;\n        case 'ascii':\n          buf = stringToAscii(string);\n          break;\n        default:\n          throw new Error(\"Unsupported encoding: \".concat(encoding));\n      }\n      this.writeBuffer(buf);\n    }\n  }, {\n    key: \"writeUInt24BE\",\n    value: function writeUInt24BE(val) {\n      this.buffer[this.pos++] = val >>> 16 & 0xff;\n      this.buffer[this.pos++] = val >>> 8 & 0xff;\n      this.buffer[this.pos++] = val & 0xff;\n    }\n  }, {\n    key: \"writeUInt24LE\",\n    value: function writeUInt24LE(val) {\n      this.buffer[this.pos++] = val & 0xff;\n      this.buffer[this.pos++] = val >>> 8 & 0xff;\n      this.buffer[this.pos++] = val >>> 16 & 0xff;\n    }\n  }, {\n    key: \"writeInt24BE\",\n    value: function writeInt24BE(val) {\n      if (val >= 0) {\n        this.writeUInt24BE(val);\n      } else {\n        this.writeUInt24BE(val + 0xffffff + 1);\n      }\n    }\n  }, {\n    key: \"writeInt24LE\",\n    value: function writeInt24LE(val) {\n      if (val >= 0) {\n        this.writeUInt24LE(val);\n      } else {\n        this.writeUInt24LE(val + 0xffffff + 1);\n      }\n    }\n  }, {\n    key: \"fill\",\n    value: function fill(val, length) {\n      if (length < this.buffer.length) {\n        this.buffer.fill(val, this.pos, this.pos + length);\n        this.pos += length;\n      } else {\n        var buf = new Uint8Array(length);\n        buf.fill(val);\n        this.writeBuffer(buf);\n      }\n    }\n  }]);\n  return EncodeStream;\n}();\nfunction stringToUtf16(string, swap) {\n  var buf = new Uint16Array(string.length);\n  for (var i = 0; i < string.length; i++) {\n    var code = string.charCodeAt(i);\n    if (swap) {\n      code = code >> 8 | (code & 0xff) << 8;\n    }\n    buf[i] = code;\n  }\n  return new Uint8Array(buf.buffer);\n}\nfunction stringToAscii(string) {\n  var buf = new Uint8Array(string.length);\n  for (var i = 0; i < string.length; i++) {\n    // Match node.js behavior - encoding allows 8-bit rather than 7-bit.\n    buf[i] = string.charCodeAt(i);\n  }\n  return buf;\n}\nvar _iterator = _createForOfIteratorHelper(Object.getOwnPropertyNames(DataView.prototype)),\n  _step;\ntry {\n  var _loop = function _loop() {\n    var key = _step.value;\n    if (key.slice(0, 3) === 'set') {\n      var type = key.slice(3).replace('Ui', 'UI');\n      if (type === 'Float32') {\n        type = 'Float';\n      } else if (type === 'Float64') {\n        type = 'Double';\n      }\n      var bytes = DecodeStream.TYPES[type];\n      EncodeStream.prototype['write' + type + (bytes === 1 ? '' : 'BE')] = function (value) {\n        this.view[key](this.pos, value, false);\n        this.pos += bytes;\n      };\n      if (bytes !== 1) {\n        EncodeStream.prototype['write' + type + 'LE'] = function (value) {\n          this.view[key](this.pos, value, true);\n          this.pos += bytes;\n        };\n      }\n    }\n  };\n  for (_iterator.s(); !(_step = _iterator.n()).done;) {\n    _loop();\n  }\n} catch (err) {\n  _iterator.e(err);\n} finally {\n  _iterator.f();\n}","map":{"version":3,"names":["DecodeStream","textEncoder","TextEncoder","isBigEndian","Uint8Array","Uint16Array","buffer","EncodeStream","view","DataView","byteOffset","byteLength","pos","set","length","string","encoding","buf","stringToUtf16","encode","stringToAscii","Error","writeBuffer","val","writeUInt24BE","writeUInt24LE","fill","swap","i","code","charCodeAt","Object","getOwnPropertyNames","prototype","key","slice","type","replace","bytes","TYPES","value"],"sources":["/Users/chalanthornaenguthaivadt/Desktop/final_thesis/gims/gims-frontend/node_modules/restructure/src/EncodeStream.js"],"sourcesContent":["import {DecodeStream} from './DecodeStream.js';\n\nconst textEncoder = new TextEncoder();\nconst isBigEndian = new Uint8Array(new Uint16Array([0x1234]).buffer)[0] == 0x12;\n\nexport class EncodeStream {\n  constructor(buffer) {\n    this.buffer = buffer;\n    this.view = new DataView(this.buffer.buffer, this.buffer.byteOffset, this.buffer.byteLength);\n    this.pos = 0;\n  }\n\n  writeBuffer(buffer) {\n    this.buffer.set(buffer, this.pos);\n    this.pos += buffer.length;\n  }\n\n  writeString(string, encoding = 'ascii') {\n    let buf;\n    switch (encoding) {\n      case 'utf16le':\n      case 'utf16-le':\n      case 'ucs2': // node treats this the same as utf16.\n        buf = stringToUtf16(string, isBigEndian);\n        break;\n\n      case 'utf16be':\n      case 'utf16-be':\n        buf = stringToUtf16(string, !isBigEndian);\n        break;\n\n      case 'utf8':\n        buf = textEncoder.encode(string);\n        break;\n\n      case 'ascii':\n        buf = stringToAscii(string);\n        break;\n\n      default:\n        throw new Error(`Unsupported encoding: ${encoding}`);\n    }\n\n    this.writeBuffer(buf);\n  }\n\n  writeUInt24BE(val) {\n    this.buffer[this.pos++] = (val >>> 16) & 0xff;\n    this.buffer[this.pos++] = (val >>> 8) & 0xff;\n    this.buffer[this.pos++] = val & 0xff;\n  }\n\n  writeUInt24LE(val) {\n    this.buffer[this.pos++] = val & 0xff;\n    this.buffer[this.pos++] = (val >>> 8) & 0xff;\n    this.buffer[this.pos++] = (val >>> 16) & 0xff;\n  }\n\n  writeInt24BE(val) {\n    if (val >= 0) {\n      this.writeUInt24BE(val);\n    } else {\n      this.writeUInt24BE(val + 0xffffff + 1);\n    }\n  }\n\n  writeInt24LE(val) {\n    if (val >= 0) {\n      this.writeUInt24LE(val);\n    } else {\n      this.writeUInt24LE(val + 0xffffff + 1);\n    }\n  }\n\n  fill(val, length) {\n    if (length < this.buffer.length) {\n      this.buffer.fill(val, this.pos, this.pos + length);\n      this.pos += length;\n    } else {\n      const buf = new Uint8Array(length);\n      buf.fill(val);\n      this.writeBuffer(buf);\n    }\n  }\n}\n\nfunction stringToUtf16(string, swap) {\n  let buf = new Uint16Array(string.length);\n  for (let i = 0; i < string.length; i++) {\n    let code = string.charCodeAt(i);\n    if (swap) {\n      code = (code >> 8) | ((code & 0xff) << 8);\n    }\n    buf[i] = code;\n  }\n  return new Uint8Array(buf.buffer);\n}\n\nfunction stringToAscii(string) {\n  let buf = new Uint8Array(string.length);\n  for (let i = 0; i < string.length; i++) {\n    // Match node.js behavior - encoding allows 8-bit rather than 7-bit.\n    buf[i] = string.charCodeAt(i);\n  }\n  return buf;\n}\n\nfor (let key of Object.getOwnPropertyNames(DataView.prototype)) {\n  if (key.slice(0, 3) === 'set') {\n    let type = key.slice(3).replace('Ui', 'UI');\n    if (type === 'Float32') {\n      type = 'Float';\n    } else if (type === 'Float64') {\n      type = 'Double';\n    }\n    let bytes = DecodeStream.TYPES[type];\n    EncodeStream.prototype['write' + type + (bytes === 1 ? '' : 'BE')] = function (value) {\n      this.view[key](this.pos, value, false);\n      this.pos += bytes;\n    };\n\n    if (bytes !== 1) {\n      EncodeStream.prototype['write' + type + 'LE'] = function (value) {\n        this.view[key](this.pos, value, true);\n        this.pos += bytes;\n      };\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}