{"ast":null,"code":"import _classCallCheck from \"/Users/chalanthornaenguthaivadt/Desktop/final_thesis/gims/gims-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/chalanthornaenguthaivadt/Desktop/final_thesis/gims/gims-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/chalanthornaenguthaivadt/Desktop/final_thesis/gims/gims-frontend/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/chalanthornaenguthaivadt/Desktop/final_thesis/gims/gims-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/chalanthornaenguthaivadt/Desktop/final_thesis/gims/gims-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/chalanthornaenguthaivadt/Desktop/final_thesis/gims/gims-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Array as ArrayT } from './Array.js';\nimport { Number as NumberT } from './Number.js';\nimport * as utils from './utils.js';\nexport var LazyArray = /*#__PURE__*/function (_ArrayT) {\n  _inherits(LazyArray, _ArrayT);\n  var _super = _createSuper(LazyArray);\n  function LazyArray() {\n    _classCallCheck(this, LazyArray);\n    return _super.apply(this, arguments);\n  }\n  _createClass(LazyArray, [{\n    key: \"decode\",\n    value: function decode(stream, parent) {\n      var pos = stream.pos;\n      var length = utils.resolveLength(this.length, stream, parent);\n      if (this.length instanceof NumberT) {\n        parent = {\n          parent: parent,\n          _startOffset: pos,\n          _currentOffset: 0,\n          _length: length\n        };\n      }\n      var res = new LazyArrayValue(this.type, length, stream, parent);\n      stream.pos += length * this.type.size(null, parent);\n      return res;\n    }\n  }, {\n    key: \"size\",\n    value: function size(val, ctx) {\n      if (val instanceof LazyArrayValue) {\n        val = val.toArray();\n      }\n      return _get(_getPrototypeOf(LazyArray.prototype), \"size\", this).call(this, val, ctx);\n    }\n  }, {\n    key: \"encode\",\n    value: function encode(stream, val, ctx) {\n      if (val instanceof LazyArrayValue) {\n        val = val.toArray();\n      }\n      return _get(_getPrototypeOf(LazyArray.prototype), \"encode\", this).call(this, stream, val, ctx);\n    }\n  }]);\n  return LazyArray;\n}(ArrayT);\nvar LazyArrayValue = /*#__PURE__*/function () {\n  function LazyArrayValue(type, length, stream, ctx) {\n    _classCallCheck(this, LazyArrayValue);\n    this.type = type;\n    this.length = length;\n    this.stream = stream;\n    this.ctx = ctx;\n    this.base = this.stream.pos;\n    this.items = [];\n  }\n  _createClass(LazyArrayValue, [{\n    key: \"get\",\n    value: function get(index) {\n      if (index < 0 || index >= this.length) {\n        return undefined;\n      }\n      if (this.items[index] == null) {\n        var pos = this.stream.pos;\n        this.stream.pos = this.base + this.type.size(null, this.ctx) * index;\n        this.items[index] = this.type.decode(this.stream, this.ctx);\n        this.stream.pos = pos;\n      }\n      return this.items[index];\n    }\n  }, {\n    key: \"toArray\",\n    value: function toArray() {\n      var result = [];\n      for (var i = 0, end = this.length; i < end; i++) {\n        result.push(this.get(i));\n      }\n      return result;\n    }\n  }]);\n  return LazyArrayValue;\n}();","map":{"version":3,"names":["Array","ArrayT","Number","NumberT","utils","LazyArray","stream","parent","pos","length","resolveLength","_startOffset","_currentOffset","_length","res","LazyArrayValue","type","size","val","ctx","toArray","base","items","index","undefined","decode","result","i","end","push","get"],"sources":["/Users/chalanthornaenguthaivadt/Desktop/final_thesis/gims/gims-frontend/node_modules/restructure/src/LazyArray.js"],"sourcesContent":["import {Array as ArrayT} from './Array.js';\nimport {Number as NumberT} from './Number.js';\nimport * as utils from './utils.js';\n\nexport class LazyArray extends ArrayT {\n  decode(stream, parent) {\n    const { pos } = stream;\n    const length = utils.resolveLength(this.length, stream, parent);\n\n    if (this.length instanceof NumberT) {\n      parent = {\n        parent,\n        _startOffset: pos,\n        _currentOffset: 0,\n        _length: length\n      };\n    }\n\n    const res = new LazyArrayValue(this.type, length, stream, parent);\n\n    stream.pos += length * this.type.size(null, parent);\n    return res;\n  }\n\n  size(val, ctx) {\n    if (val instanceof LazyArrayValue) {\n      val = val.toArray();\n    }\n\n    return super.size(val, ctx);\n  }\n\n  encode(stream, val, ctx) {\n    if (val instanceof LazyArrayValue) {\n      val = val.toArray();\n    }\n\n    return super.encode(stream, val, ctx);\n  }\n}\n\nclass LazyArrayValue {\n  constructor(type, length, stream, ctx) {\n    this.type = type;\n    this.length = length;\n    this.stream = stream;\n    this.ctx = ctx;\n    this.base = this.stream.pos;\n    this.items = [];\n  }\n\n  get(index) {\n    if ((index < 0) || (index >= this.length)) {\n      return undefined;\n    }\n\n    if (this.items[index] == null) {\n      const { pos } = this.stream;\n      this.stream.pos = this.base + (this.type.size(null, this.ctx) * index);\n      this.items[index] = this.type.decode(this.stream, this.ctx);\n      this.stream.pos = pos;\n    }\n\n    return this.items[index];\n  }\n\n  toArray() {\n    const result = [];\n    for (let i = 0, end = this.length; i < end; i++) {\n      result.push(this.get(i));\n    }\n    return result;\n  }\n}\n"],"mappings":";;;;;;AAAA,SAAQA,KAAK,IAAIC,MAAM,QAAO,YAAY;AAC1C,SAAQC,MAAM,IAAIC,OAAO,QAAO,aAAa;AAC7C,OAAO,KAAKC,KAAK,MAAM,YAAY;AAEnC,WAAaC,SAAS;EAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA,OACpB,gBAAOC,MAAM,EAAEC,MAAM,EAAE;MACrB,IAAQC,GAAG,GAAKF,MAAM,CAAdE,GAAG;MACX,IAAMC,MAAM,GAAGL,KAAK,CAACM,aAAa,CAAC,IAAI,CAACD,MAAM,EAAEH,MAAM,EAAEC,MAAM,CAAC;MAE/D,IAAI,IAAI,CAACE,MAAM,YAAYN,OAAO,EAAE;QAClCI,MAAM,GAAG;UACPA,MAAM,EAANA,MAAM;UACNI,YAAY,EAAEH,GAAG;UACjBI,cAAc,EAAE,CAAC;UACjBC,OAAO,EAAEJ;QACX,CAAC;MACH;MAEA,IAAMK,GAAG,GAAG,IAAIC,cAAc,CAAC,IAAI,CAACC,IAAI,EAAEP,MAAM,EAAEH,MAAM,EAAEC,MAAM,CAAC;MAEjED,MAAM,CAACE,GAAG,IAAIC,MAAM,GAAG,IAAI,CAACO,IAAI,CAACC,IAAI,CAAC,IAAI,EAAEV,MAAM,CAAC;MACnD,OAAOO,GAAG;IACZ;EAAC;IAAA;IAAA,OAED,cAAKI,GAAG,EAAEC,GAAG,EAAE;MACb,IAAID,GAAG,YAAYH,cAAc,EAAE;QACjCG,GAAG,GAAGA,GAAG,CAACE,OAAO,EAAE;MACrB;MAEA,2EAAkBF,GAAG,EAAEC,GAAG;IAC5B;EAAC;IAAA;IAAA,OAED,gBAAOb,MAAM,EAAEY,GAAG,EAAEC,GAAG,EAAE;MACvB,IAAID,GAAG,YAAYH,cAAc,EAAE;QACjCG,GAAG,GAAGA,GAAG,CAACE,OAAO,EAAE;MACrB;MAEA,6EAAoBd,MAAM,EAAEY,GAAG,EAAEC,GAAG;IACtC;EAAC;EAAA;AAAA,EAlC4BlB,MAAM;AAmCpC,IAEKc,cAAc;EAClB,wBAAYC,IAAI,EAAEP,MAAM,EAAEH,MAAM,EAAEa,GAAG,EAAE;IAAA;IACrC,IAAI,CAACH,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACP,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACH,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACa,GAAG,GAAGA,GAAG;IACd,IAAI,CAACE,IAAI,GAAG,IAAI,CAACf,MAAM,CAACE,GAAG;IAC3B,IAAI,CAACc,KAAK,GAAG,EAAE;EACjB;EAAC;IAAA;IAAA,OAED,aAAIC,KAAK,EAAE;MACT,IAAKA,KAAK,GAAG,CAAC,IAAMA,KAAK,IAAI,IAAI,CAACd,MAAO,EAAE;QACzC,OAAOe,SAAS;MAClB;MAEA,IAAI,IAAI,CAACF,KAAK,CAACC,KAAK,CAAC,IAAI,IAAI,EAAE;QAC7B,IAAQf,GAAG,GAAK,IAAI,CAACF,MAAM,CAAnBE,GAAG;QACX,IAAI,CAACF,MAAM,CAACE,GAAG,GAAG,IAAI,CAACa,IAAI,GAAI,IAAI,CAACL,IAAI,CAACC,IAAI,CAAC,IAAI,EAAE,IAAI,CAACE,GAAG,CAAC,GAAGI,KAAM;QACtE,IAAI,CAACD,KAAK,CAACC,KAAK,CAAC,GAAG,IAAI,CAACP,IAAI,CAACS,MAAM,CAAC,IAAI,CAACnB,MAAM,EAAE,IAAI,CAACa,GAAG,CAAC;QAC3D,IAAI,CAACb,MAAM,CAACE,GAAG,GAAGA,GAAG;MACvB;MAEA,OAAO,IAAI,CAACc,KAAK,CAACC,KAAK,CAAC;IAC1B;EAAC;IAAA;IAAA,OAED,mBAAU;MACR,IAAMG,MAAM,GAAG,EAAE;MACjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAG,IAAI,CAACnB,MAAM,EAAEkB,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;QAC/CD,MAAM,CAACG,IAAI,CAAC,IAAI,CAACC,GAAG,CAACH,CAAC,CAAC,CAAC;MAC1B;MACA,OAAOD,MAAM;IACf;EAAC;EAAA;AAAA"},"metadata":{},"sourceType":"module"}