{"ast":null,"code":"import _slicedToArray from\"/Users/chalanthornaenguthaivadt/Desktop/final_thesis/gims/gims-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,createContext,useContext,useMemo}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";export var ConfirmContext=/*#__PURE__*/createContext({confirm:{active:false,message:'',action:'',status:''},setConfirm:function setConfirm(){}});export function ConfirmProvider(_ref){var children=_ref.children;var _useState=useState({active:false,message:'',action:'',status:''}),_useState2=_slicedToArray(_useState,2),confirm=_useState2[0],setConfirm=_useState2[1];var isConfirm=useMemo(function(){return{confirm:confirm,setConfirm:setConfirm};},[confirm,setConfirm]);return/*#__PURE__*/_jsx(ConfirmContext.Provider,{value:isConfirm,children:children});}export var useConfirm=function useConfirm(){return useContext(ConfirmContext);};","map":{"version":3,"names":["React","useState","createContext","useContext","useMemo","ConfirmContext","confirm","active","message","action","status","setConfirm","ConfirmProvider","children","isConfirm","useConfirm"],"sources":["/Users/chalanthornaenguthaivadt/Desktop/final_thesis/gims/gims-frontend/src/contexts/ConfirmContext.tsx"],"sourcesContent":["import React, {\n  useState,\n  createContext,\n  useContext,\n  useMemo\n} from 'react';\n\ntype ConfirmType = {\n    active: boolean,\n    message: string,\n    action: string,\n    status: string\n};\n\n  interface ConfirmContextType {\n    confirm: ConfirmType;\n    setConfirm: React.Dispatch<React.SetStateAction<ConfirmType>>;\n  }\n\nexport const ConfirmContext = createContext<ConfirmContextType>({\n  confirm: {\n    active: false,\n    message: '',\n    action: '',\n    status: ''\n  },\n  setConfirm: () => {}\n});\n\nexport function ConfirmProvider({ children }: any) {\n  const [confirm, setConfirm] = useState<ConfirmType>({\n    active: false,\n    message: '',\n    action: '',\n    status: ''\n  });\n  const isConfirm = useMemo(() => ({ confirm, setConfirm }), [confirm, setConfirm]);\n\n  return (\n    <ConfirmContext.Provider value={isConfirm}>\n      { children }\n    </ConfirmContext.Provider>\n  );\n}\n\nexport const useConfirm = () => useContext(ConfirmContext);\n"],"mappings":"6JAAA,MAAOA,MAAK,EACVC,QAAQ,CACRC,aAAa,CACbC,UAAU,CACVC,OAAO,KACF,OAAO,CAAC,2CAcf,MAAO,IAAMC,eAAc,cAAGH,aAAa,CAAqB,CAC9DI,OAAO,CAAE,CACPC,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,EAAE,CACXC,MAAM,CAAE,EAAE,CACVC,MAAM,CAAE,EACV,CAAC,CACDC,UAAU,CAAE,qBAAM,CAAC,CACrB,CAAC,CAAC,CAEF,MAAO,SAASC,gBAAe,MAAoB,IAAjBC,SAAQ,MAARA,QAAQ,CACxC,cAA8BZ,QAAQ,CAAc,CAClDM,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,EAAE,CACXC,MAAM,CAAE,EAAE,CACVC,MAAM,CAAE,EACV,CAAC,CAAC,wCALKJ,OAAO,eAAEK,UAAU,eAM1B,GAAMG,UAAS,CAAGV,OAAO,CAAC,iBAAO,CAAEE,OAAO,CAAPA,OAAO,CAAEK,UAAU,CAAVA,UAAW,CAAC,EAAC,CAAE,CAACL,OAAO,CAAEK,UAAU,CAAC,CAAC,CAEjF,mBACE,KAAC,cAAc,CAAC,QAAQ,EAAC,KAAK,CAAEG,SAAU,UACtCD,QAAQ,EACc,CAE9B,CAEA,MAAO,IAAME,WAAU,CAAG,QAAbA,WAAU,SAASZ,WAAU,CAACE,cAAc,CAAC"},"metadata":{},"sourceType":"module"}