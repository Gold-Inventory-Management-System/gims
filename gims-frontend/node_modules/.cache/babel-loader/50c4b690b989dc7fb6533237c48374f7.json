{"ast":null,"code":"import _slicedToArray from\"/Users/chalanthornaenguthaivadt/Desktop/Thesis/Gold-Inventory-Management-System/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import'./transactiontable.css';import{ConvertWeight}from'../../functions/ConvertWeight';import{ConvertDateForDisplay,ConvertDateFoCal}from'../../functions/ConvertDateAndTimeForDisplay';import TransactionCard from'../transactioncard/TransactionCard';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function TransactionTable(props){var transactionData=props.transactionData,status=props.status,time=props.time;var _useState=useState('gram'),_useState2=_slicedToArray(_useState,2),weightUnit=_useState2[0],setWeightUnit=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),activateCard=_useState4[0],setActivateCard=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),transactionSelect=_useState6[0],setTransactionSelect=_useState6[1];function ConvertWeightUnit(){if(weightUnit==='gram'){setWeightUnit('Baht');}else{setWeightUnit('gram');}}var dateAfter=new Date(time.split(' ')[0]);var dateBefore=new Date(time.split(' ')[1]);return/*#__PURE__*/_jsxs(\"div\",{className:\"transaction table-main\",children:[/*#__PURE__*/_jsx(TransactionCard,{data:transactionSelect,active:activateCard}),/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{className:\"transaction row-header\",children:[/*#__PURE__*/_jsx(\"th\",{className:\"head-date\",children:\"date\"}),/*#__PURE__*/_jsx(\"th\",{className:\"head-code\",children:\"code\"}),/*#__PURE__*/_jsx(\"th\",{className:\"head-transtype\",children:\"transaction type\"}),/*#__PURE__*/_jsx(\"th\",{className:\"head-note\",children:\"note\"}),/*#__PURE__*/_jsxs(\"th\",{className:\"head-weight\",children:[\"weight\",/*#__PURE__*/_jsx(\"button\",{className:\"table-weight-unit\",type:\"button\",onClick:function onClick(){ConvertWeightUnit();},children:weightUnit})]}),/*#__PURE__*/_jsx(\"th\",{className:\"head-price\",children:\"price\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:transactionData===null||transactionData===void 0?void 0:transactionData.filter(function(el){return status==='all'?el:el.transaction.transaction_type===status;}).filter(function(el){if(time.split(' ')[1]){return new Date(ConvertDateFoCal(el.transaction.date))<=dateBefore&&new Date(ConvertDateFoCal(el.transaction.date))>=dateAfter;}if(time.split(' ')[0]){return new Date(ConvertDateFoCal(el.transaction.date))>=dateAfter;}return el;}).map(function(data){return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsxs(\"tr\",{className:\"transaction row-body\",onClick:function onClick(){setTransactionSelect(data);setActivateCard(!activateCard);},children:[/*#__PURE__*/_jsxs(\"td\",{className:\"body-date\",children:[/*#__PURE__*/_jsx(\"div\",{children:ConvertDateForDisplay(data.transaction.date)[0]}),/*#__PURE__*/_jsx(\"div\",{children:ConvertDateForDisplay(data.transaction.date)[1]})]}),/*#__PURE__*/_jsx(\"td\",{className:\"body-code\",children:data.gold_detail.code}),/*#__PURE__*/_jsx(\"td\",{className:\"body-transtype\",children:/*#__PURE__*/_jsx(\"div\",{className:\"transtype-flexbox\",children:/*#__PURE__*/_jsx(\"div\",{className:\"transtype-color \".concat(data.transaction.transaction_type),children:data.transaction.transaction_type})})}),/*#__PURE__*/_jsx(\"td\",{className:\"body-note\",children:data.transaction.note}),/*#__PURE__*/_jsxs(\"td\",{className:\"body-weight\",children:[data.transaction.transaction_type==='change'&&(weightUnit==='Baht'?\"\".concat(ConvertWeight(data.gold_detail.weight,'gram'),\" / \"):\"\".concat(data.gold_detail.weight,\" / \")),/*#__PURE__*/_jsx(\"div\",{children:weightUnit==='Baht'?ConvertWeight(data.transaction.weight,'gram'):data.transaction.weight})]}),/*#__PURE__*/_jsx(\"td\",{className:\"body-price\",children:data.transaction.price})]})},data.transaction.transaction_id);})})]})]});}","map":{"version":3,"names":["React","useState","ConvertWeight","ConvertDateForDisplay","ConvertDateFoCal","TransactionCard","TransactionTable","props","transactionData","status","time","weightUnit","setWeightUnit","activateCard","setActivateCard","transactionSelect","setTransactionSelect","ConvertWeightUnit","dateAfter","Date","split","dateBefore","filter","el","transaction","transaction_type","date","map","data","gold_detail","code","note","weight","price","transaction_id"],"sources":["/Users/chalanthornaenguthaivadt/Desktop/Thesis/Gold-Inventory-Management-System/src/components/transactiontable/TransactionTable.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './transactiontable.css';\n\nimport { TransactionDataJoinGold } from '../../interfaces/TransactionData';\n\nimport { ConvertWeight } from '../../functions/ConvertWeight';\nimport { ConvertDateForDisplay, ConvertDateFoCal } from '../../functions/ConvertDateAndTimeForDisplay';\n\nimport TransactionCard from '../transactioncard/TransactionCard';\n\nexport default function TransactionTable(\n  props: {\n    transactionData: TransactionDataJoinGold[],\n    status: string,\n    time: string\n  }\n) {\n  const {\n    transactionData,\n    status,\n    time\n  }: {\n      transactionData: TransactionDataJoinGold[],\n      status: string,\n      time: string\n    } = props;\n\n  const [weightUnit, setWeightUnit] = useState<string>('gram');\n\n  const [activateCard, setActivateCard] = useState<boolean>(false);\n\n  const [\n    transactionSelect,\n    setTransactionSelect\n  ] = useState<TransactionDataJoinGold>();\n\n  function ConvertWeightUnit() {\n    if (weightUnit === 'gram') {\n      setWeightUnit('Baht');\n    } else {\n      setWeightUnit('gram');\n    }\n  }\n\n  const dateAfter = new Date(time.split(' ')[0]);\n  const dateBefore = new Date(time.split(' ')[1]);\n\n  return (\n    <div className=\"transaction table-main\">\n      <TransactionCard data={transactionSelect} active={activateCard} />\n      <table>\n        {/* -- Table Header -- */}\n        <thead>\n          <tr className=\"transaction row-header\">\n            <th className=\"head-date\">\n              date\n            </th>\n            <th className=\"head-code\">\n              code\n            </th>\n            <th className=\"head-transtype\">\n              transaction type\n            </th>\n            <th className=\"head-note\">\n              note\n            </th>\n            <th className=\"head-weight\">\n              weight\n              <button\n                className=\"table-weight-unit\"\n                type=\"button\"\n                onClick={() => { ConvertWeightUnit(); }}\n              >\n                {weightUnit}\n              </button>\n            </th>\n            <th className=\"head-price\">\n              price\n            </th>\n          </tr>\n        </thead>\n        {/* -- Table Body -- */}\n        <tbody>\n          {\n            transactionData\n              ?.filter((el: TransactionDataJoinGold) => (\n                status === 'all'\n                  ? el\n                  : el.transaction.transaction_type === status\n              ))\n              .filter((el: TransactionDataJoinGold) => {\n                if (time.split(' ')[1]) {\n                  return new Date(ConvertDateFoCal(el.transaction.date)) <= dateBefore\n                  && new Date(ConvertDateFoCal(el.transaction.date)) >= dateAfter;\n                }\n                if (time.split(' ')[0]) {\n                  return new Date(ConvertDateFoCal(el.transaction.date)) >= dateAfter;\n                }\n                return el;\n              })\n              .map((data: TransactionDataJoinGold) => (\n                <React.Fragment key={data.transaction.transaction_id}>\n                  <tr\n                    className=\"transaction row-body\"\n                    onClick={() => {\n                      setTransactionSelect(data);\n                      setActivateCard(!activateCard);\n                    }}\n                  >\n                    <td className=\"body-date\">\n                      <div>\n                        {ConvertDateForDisplay(data.transaction.date)[0]}\n                      </div>\n                      <div>\n                        {ConvertDateForDisplay(data.transaction.date)[1]}\n                      </div>\n                    </td>\n                    <td className=\"body-code\">\n                      {data.gold_detail.code}\n                    </td>\n                    <td className=\"body-transtype\">\n                      <div className=\"transtype-flexbox\">\n                        <div className={`transtype-color ${data.transaction.transaction_type}`}>\n                          {data.transaction.transaction_type}\n                        </div>\n                      </div>\n                    </td>\n                    <td className=\"body-note\">\n                      {data.transaction.note}\n                    </td>\n                    <td className=\"body-weight\">\n                      {\n                        data.transaction.transaction_type === 'change'\n                          && (weightUnit === 'Baht'\n                            ? `${ConvertWeight(data.gold_detail.weight, 'gram')} / `\n                            : `${data.gold_detail.weight} / `)\n                      }\n                      <div>\n                        {\n                          weightUnit === 'Baht'\n                            ? ConvertWeight(data.transaction.weight, 'gram')\n                            : data.transaction.weight\n                        }\n                      </div>\n                    </td>\n                    <td className=\"body-price\">\n                      {data.transaction.price}\n                    </td>\n                  </tr>\n                </React.Fragment>\n              ))\n          }\n        </tbody>\n      </table>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}